#version 450

layout(local_size_x = 256) in;

layout(push_constant) uniform PushConstants {
    uint data_size;
    uint op_type;
} pc;

layout(std430, binding = 0) buffer InBuffer1 { float a[]; };
layout(std430, binding = 1) buffer InBuffer2 { float b[]; };

void main() {
    uint idx = gl_GlobalInvocationID.x;
    if (idx >= pc.data_size) return;

    float val_a = a[idx];
    float val_b = b[idx];
    
    switch(pc.op_type) {
        case 0: a[idx] = val_a + val_b; break;
        case 1: a[idx] = val_a - val_b; break;
        case 2: a[idx] = val_a * val_b; break;
        case 3: a[idx] = val_b != 0 ? val_a / val_b : 0.0; break;
    }
    if (pc.op_type == 0) a[idx] = val_a + val_b;
    else if (pc.op_type == 1) a[idx] = val_a - val_b;
    else if (pc.op_type == 2) a[idx] = val_a * val_b;
    else if (pc.op_type == 3) a[idx] = (val_b != 0.0) ? val_a / val_b : 0.0;
}