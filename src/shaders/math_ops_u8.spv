#version 450
#extension GL_EXT_shader_8bit_storage : require
#extension GL_EXT_shader_explicit_arithmetic_types : require

layout(local_size_x = 256) in;

layout(push_constant) uniform PushConstants {
    uint data_size;
    uint op_type;
} pc;

layout(set = 0, binding = 0) buffer InBuffer1 { uint8_t data[]; } a;
layout(set = 0, binding = 1) buffer InBuffer2 { uint8_t data[]; } b;

void main() {
    uint idx = gl_GlobalInvocationID.x;
    if (idx >= pc.data_size) return;

    float val_a = float(a.data[idx]) / 255.0;
    float val_b = float(b.data[idx]) / 255.0;
    
    float result;
    if (pc.op_type == 0) result = val_a + val_b;
    else if (pc.op_type == 1) result = val_a - val_b;
    else if (pc.op_type == 2) result = val_a * val_b;
    else if (pc.op_type == 3) result = (val_b != 0.0) ? val_a / val_b : 0.0;
    
    a.data[idx] = uint8_t(result * 255.0);
}