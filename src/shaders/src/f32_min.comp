#version 450

layout(local_size_x = 256) in;

layout(std430, binding = 0) buffer InA { float a[]; };
layout(std430, binding = 1) buffer InB { float b[]; };
layout(std430, binding = 2) buffer Out { float c[]; };

layout(push_constant) uniform PC {
    uint rank;
    uint pad;
    uint dims[8];
    uint stridesA[8];
    uint stridesB[8];
} pc;

void main() {
    uint gid = gl_GlobalInvocationID.x;
    uint total = 1;
    for (uint i = 0; i < pc.rank; ++i) total *= pc.dims[i];
    if (gid >= total) return;
    uint idx = gid;
    uint offA = 0;
    uint offB = 0;
    for (int i = int(pc.rank) - 1; i >= 0; --i) {
        uint d = pc.dims[i];
        uint r = idx % d;
        idx /= d;
        offA += r * pc.stridesA[i];
        offB += r * pc.stridesB[i];
    }
    c[gid] = min(a[offA], b[offB]);
}
